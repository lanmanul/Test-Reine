# frozen_string_literal: true

# Вам дан набор данных, представляющих геопозиции курьера, собранные с GPS маячка,
# установленного на его электровелосипеде. Маячок собирает данные каждые
# 20 секунд. Из-за плотной застройки и различных помех данные могут быть
# неточными, с погрешностью до 50 метров, особенно в местах парковки.
#     Предложите алгоритм для обработки данных геопозиций курьера с целью
# построения его маршрута на карте. Алгоритм должен минимизировать резкие скачки
# в данных и максимально точно отражать реальный маршрут курьера.
#     1. Достаточно описать шаги алгоритма решения задачи.
#         2. Объясните почему решение оптимальное.

#---------------------------------------------------------------------------------------

# Первым делом отфильтруем данные получаемые с gps маячка с целью отбора координат
# с наименьшим отклонением от нормы, которую мы предполагаем и определяем, например
# в 10-20 метров.
# Очистка сущности от данных с высокой погрешностью повышает точность маршрута,
# исключая ложные данные, которые могут возникать из-за помех в условиях плотной застройки
# и в местах парковки.
# Теперь нам необходимо создать непрерывность и гладкость отображения прогресса преодоления
# маршрута курьером, убрать резкие рывки или задержки юнита.
# Для этого необходимо во-первых заполнить интервалы между точками, данные для которых
# приходят раз в 20 секунд и могут иметь погрешность, что бы это сделать нам необходимо
# посчитать среднее время и скорость преодоления расстояния между этими точками.
# Далее необходимо синхронизировать полученные данные с теми данными, которые отображают
# реальные дорожные условия для корректировки скорости  и времени преодоления отрезка.
# Имея откорректированные данные мы можем построить маршрут на карте с корректным отображением
# самом треке, скорости и времени преодоления.

# Получаем данные с GPS -> отфильтровываем данные с большой погрешностью -> создаем непрерывность
# и гладкость отображения прогресса преодоления маршрута -> корректируем в соответствии с реальными
# дорожными условиями -> выстраиваем маршрут.













